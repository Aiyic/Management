@model Management.Models.Person.Person

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center">Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal" style="padding-left:300px">
    <h4 style="padding-left:240px">Person</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PersonId)

    <div class="form-group">
        @Html.LabelFor(model => model.PersonId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.PersonId)
            @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" position:relative;>
            <input id="pwd_lookOrNot" type="password" name="Password" value="" class="form-control" />
            <span id="look_orNot" class="glyphicon glyphicon-eye-open"></span>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsAdminister, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.IsAdminister)
            @Html.ValidationMessageFor(model => model.IsAdminister, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="padding-left:103px">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div style="text-align:center">
    <button type="button" class="btn btn-outline-primary">@Html.ActionLink("Back to List", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
