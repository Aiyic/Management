@model Management.Models.Record.Record

@{
    ViewBag.Title = "编辑记录";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 style="text-align:center;margin-bottom:70px">编辑记录</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="padding-left:300px">
        <h4 style="padding-left:240px">记录</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RecordId)

        <div class="form-group">
            @Html.LabelFor(model => model.RecordId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RecordId)
                @Html.ValidationMessageFor(model => model.RecordId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoodId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoodId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoodId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperationNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperationNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperationNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperationType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" name="OperationType">
                    <option selected="selected" style="display : none"> @Model.OperationType </option>
                    <option label="Borrow" value=@Management.Models.Record.OpType.Borrow></option>
                    <option label="Consumption" value=@Management.Models.Record.OpType.Consumption></option>
                    <option label="Return" value=@Management.Models.Record.OpType.Return></option>
                </select>
                @Html.ValidationMessageFor(model => model.OperationType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OperationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OperationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OperationTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="padding-left:103px">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div style="text-align:center">
    <button type="button" class="btn btn-outline-primary">
        @Html.ActionLink("返回列表", "Index")
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
